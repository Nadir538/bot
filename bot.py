import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "7189567503:AAGv-4sZSIfX_nwvaz0NMxrB5lC8Si8ndUs"
ADMIN_USERNAME = "@Xsfvbdd"
ADMIN_ID = 6862660218

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –î–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–ø–∏—Å–∫–∞—Ö
SUBSCRIPTIONS = {
    "all": {
        "name": "üî• –í–°–ï –Æ–ó–ï–†–ù–ï–ô–ú–´",
        "price": 830,
        "desc": "–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —é–∑–µ—Ä–Ω–µ–π–º–∞–º –∏–∑ –±–∞–∑—ã"
    },
    "month": {
        "name": "‚è≥ –ü–û–î–ü–ò–°–ö–ê –ù–ê –ú–ï–°–Ø–¶", 
        "price": 415,
        "desc": "–î–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º —é–∑–µ—Ä–Ω–µ–π–º–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –¥–Ω–µ–π"
    },
    "numbers": {
        "name": "üìû –í–°–ï –ù–û–ú–ï–†–ê",
        "price": 830,
        "desc": "–ü–æ–ª–Ω–∞—è –±–∞–∑–∞ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤"
    },
    "five": {
        "name": "5Ô∏è‚É£ 5 –Æ–ó–ï–†–ù–ï–ô–ú–û–í",
        "price": 42,
        "desc": "5 —é–∑–µ—Ä–Ω–µ–π–º–æ–≤ –Ω–∞ –≤—ã–±–æ—Ä"
    },
    "twenty": {
        "name": "2Ô∏è‚É£0Ô∏è‚É£ 20 –Æ–ó–ï–†–ù–ï–ô–ú–û–í",
        "price": 166,
        "desc": "20 —é–∑–µ—Ä–Ω–µ–π–º–æ–≤ –Ω–∞ –≤—ã–±–æ—Ä (–≤—ã–±–æ—Ä –≤ –õ–°)"
    }
}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def main_menu():
    return ReplyKeyboardMarkup(
        [
            ["üíé –ü–û–î–ö–õ–Æ–ß–ò–¢–¨ –ü–û–î–ü–ò–°–ö–£"],
            ["‚ÑπÔ∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø", "üïò –ü–û–î–î–ï–†–ñ–ö–ê (9:00-21:00)"],
            ["üîô –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ"]
        ],
        resize_keyboard=True
    )

def subscriptions_menu():
    buttons = []
    for sub in SUBSCRIPTIONS.values():
        buttons.append([f"{sub['name']} - {sub['price']}‚ÇΩ"])
    buttons.append(["üîô –ù–ê–ó–ê–î"])
    return ReplyKeyboardMarkup(buttons, resize_keyboard=True)

def back_to_menu():
    return ReplyKeyboardMarkup([["üîô –ù–ê–ó–ê–î"]], resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome_text = (
        "üîê <b>–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –í –ë–û–¢ –ü–û–î–ü–ò–°–û–ö!</b>\n\n"
        "üì¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —é–∑–µ—Ä–Ω–µ–π–º—ã –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ:\n"
        "üëâ https://t.me/kashvaIdimerr46\n\n"
        "üíé <b>–•–æ—Ç–∏—Ç–µ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø?</b> –í—ã–±–∏—Ä–∞–π—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É:"
    )
    await update.message.reply_text(
        welcome_text, 
        reply_markup=main_menu(),
        parse_mode='HTML'
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    
    if text == "üíé –ü–û–î–ö–õ–Æ–ß–ò–¢–¨ –ü–û–î–ü–ò–°–ö–£":
        await show_subscriptions(update, context)
    elif text == "‚ÑπÔ∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø":
        await show_general_info(update, context)
    elif text == "üïò –ü–û–î–î–ï–†–ñ–ö–ê (9:00-21:00)":
        await show_support_info(update, context)
    elif text == "üîô –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ":
        await start(update, context)
    elif text == "üîô –ù–ê–ó–ê–î":
        await start(update, context)
    elif any(sub["name"] in text for sub in SUBSCRIPTIONS.values()):
        await handle_subscription(update, context)
    else:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é",
            reply_markup=main_menu()
        )

async def show_subscriptions(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = "üí∞ <b>–î–û–°–¢–£–ü–ù–´–ï –ü–û–î–ü–ò–°–ö–ò:</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç:"
    await update.message.reply_text(
        text,
        reply_markup=subscriptions_menu(),
        parse_mode='HTML'
    )

async def handle_subscription(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    sub_name = text.split(" - ")[0]
    
    sub = None
    for s in SUBSCRIPTIONS.values():
        if s["name"] == sub_name:
            sub = s
            break
    
    if not sub:
        await update.message.reply_text(
            "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞",
            reply_markup=main_menu()
        )
        return
    
    response = (
        f"üéâ <b>{sub['name']}</b>\n\n"
        f"üìù <i>{sub['desc']}</i>\n\n"
        f"üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å: <b>{sub['price']}‚ÇΩ</b>\n\n"
        f"<b>–ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å:</b>\n"
        f"1. –ù–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {ADMIN_USERNAME}\n"
        f"2. –£–∫–∞–∂–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É: <b>{sub['name']}</b>\n"
        f"3. –û–ø–ª–∞—Ç–∏—Ç–µ <b>{sub['price']}‚ÇΩ</b>\n\n"
    )
    
    if "20 –Æ–ó–ï–†–ù–ï–ô–ú–û–í" in sub['name']:
        response += "‚ÑπÔ∏è –£–∫–∞–∂–∏—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω—É–∂–Ω—ã–µ –≤–∞–º 20 —é–∑–µ—Ä–Ω–µ–π–º–æ–≤\n\n"
    elif "5 –Æ–ó–ï–†–ù–ï–ô–ú–û–í" in sub['name']:
        response += "‚ÑπÔ∏è –£–∫–∞–∂–∏—Ç–µ –∫–∞–∫–∏–µ 5 —é–∑–µ—Ä–Ω–µ–π–º–æ–≤ –≤–∞–º –Ω—É–∂–Ω—ã\n\n"
    
    response += "‚è≥ –î–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã\n\n"
    response += "üïò –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 9:00 –¥–æ 21:00"
    
    await update.message.reply_text(
        response,
        reply_markup=back_to_menu(),
        parse_mode='HTML'
    )

async def show_general_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "‚ÑπÔ∏è <b>–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ë–û–¢–ï:</b>\n\n"
        "üîê –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n\n"
        "üíé <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏:</b>\n"
        "- –ü–æ–ª–Ω—ã–µ –±–∞–∑—ã —é–∑–µ—Ä–Ω–µ–π–º–æ–≤/–Ω–æ–º–µ—Ä–æ–≤\n"
        "- –î–æ—Å—Ç—É–ø –Ω–∞ –º–µ—Å—è—Ü\n"
        "- –í—ã–±–æ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —é–∑–µ—Ä–Ω–µ–π–º–æ–≤\n\n"
        "‚ö° <b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n"
        "- –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã\n"
        "- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å 9:00 –¥–æ 21:00\n"
        "- –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n\n"
        "üïò <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b> —Å 9:00 –¥–æ 21:00\n"
        "‚ùå <b>–ù–µ —Å–ø–∞–º–∏—Ç–µ!</b> –û—Ç–≤–µ—Ç –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è"
    )
    await update.message.reply_text(
        text,
        reply_markup=main_menu(),
        parse_mode='HTML'
    )

async def show_support_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = (
        "üïò <b>–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–î–î–ï–†–ñ–ö–ï:</b>\n\n"
        "‚è∞ <b>–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:</b> —Å 9:00 –¥–æ 21:00 –µ–∂–µ–¥–Ω–µ–≤–Ω–æ\n\n"
        "üì© <b>–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º:</b>\n"
        f"üëâ {ADMIN_USERNAME}\n\n"
        "‚ùó <b>–í–∞–∂–Ω–æ:</b>\n"
        "- –ù–µ —Å–ø–∞–º–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏\n"
        "- –û–¥–∏–Ω –≤–æ–ø—Ä–æ—Å - –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "- –û—Ç–≤–µ—Ç –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è\n\n"
        "üìå –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–ø–ª–∞—Ç—ã –∏ –¥–æ—Å—Ç—É–ø–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —á–∞—Å—ã"
    )
    await update.message.reply_text(
        text,
        reply_markup=main_menu(),
        parse_mode='HTML'
    )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    application = Application.builder().token(TOKEN).build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –ó–∞–ø—É—Å–∫
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    application.run_polling()

if __name__ == "__main__":
    main()